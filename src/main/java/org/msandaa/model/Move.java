package org.msandaa.model;

import java.util.Date;

public class Move implements Comparable<Move> {

	public final String id;
	public final Trajectory trajectory;
	public final Path path;
	public final Date startTime;
	public final Date endTime;
	public final long timedifferenzInMilliSecs;
	public final double speedInMpS;
	public final int trajectoryPart;

	public Move(Trajectory trajectory, Path path, Date startTime, Date endTime, int trajectoryPart) {
		id = id(path.startStation.id, path.endStation.id);
		this.trajectory = trajectory;
		this.path = path;
		this.startTime = startTime;
		this.endTime = endTime;
		this.trajectoryPart = trajectoryPart;
		timedifferenzInMilliSecs = endTime.getTime() - startTime.getTime();
		speedInMpS = path.distanceInM / (timedifferenzInMilliSecs / 1000);
	}

	private String id(String startPosition, String endPosition) {
		return startPosition + " - " + endPosition;
	}

	@Override
	public int compareTo(Move move) {
		return startTime.compareTo(move.startTime);
	}

	// Autogenerated
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((endTime == null) ? 0 : endTime.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((path == null) ? 0 : path.hashCode());
		long temp;
		temp = Double.doubleToLongBits(speedInMpS);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		result = prime * result + ((startTime == null) ? 0 : startTime.hashCode());
		result = prime * result + (int) (timedifferenzInMilliSecs ^ (timedifferenzInMilliSecs >>> 32));
		return result;
	}

	// Autogenerated
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Move other = (Move) obj;
		if (endTime == null) {
			if (other.endTime != null)
				return false;
		} else if (!endTime.equals(other.endTime))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (path == null) {
			if (other.path != null)
				return false;
		} else if (!path.equals(other.path))
			return false;
		if (Double.doubleToLongBits(speedInMpS) != Double.doubleToLongBits(other.speedInMpS))
			return false;
		if (startTime == null) {
			if (other.startTime != null)
				return false;
		} else if (!startTime.equals(other.startTime))
			return false;
		if (timedifferenzInMilliSecs != other.timedifferenzInMilliSecs)
			return false;
		return true;
	}

}
