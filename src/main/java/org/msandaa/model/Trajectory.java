package org.msandaa.model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Trajectory {

	public final String id;
	public final List<Move> moves;

	public Trajectory(String id, Roadmap roadmap, List<DataPoint> pointList) {
		this.id = id;
		ArrayList<Move> movesL = new ArrayList<>();
		for (int i = 0; i < pointList.size() - 1; i++) {
			DataPoint startPoint = pointList.get(i);
			DataPoint endPoint = pointList.get(i + 1);
			Path path = roadmap.getPath(startPoint.station.id + " - " + endPoint.station.id);
			movesL.add(new Move(path, startPoint.time, endPoint.time));
		}
		moves = Collections.unmodifiableList(movesL);
	}

	@Override
	public String toString() {
		return "Trajectory: " + System.lineSeparator() + "name=" + id + ", trajectory=" + moves
				+ System.lineSeparator();
	}

	// Autogenerated
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((moves == null) ? 0 : moves.hashCode());
		return result;
	}

	// Autogenerated
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Trajectory other = (Trajectory) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (moves == null) {
			if (other.moves != null)
				return false;
		} else if (!moves.equals(other.moves))
			return false;
		return true;
	}

}
